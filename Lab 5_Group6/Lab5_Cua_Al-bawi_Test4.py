# Project Name:   INFT 1207 - Lab 5
# Authors:        Hezekiah Cua and Muntadher Al-bawi
# Date:           March 2025
# Description:    Testing magento website with Selenium IDE

# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


class TestAddToCart:
    def setup_method(self, method):
        self.driver = webdriver.Firefox()
        self.driver.maximize_window()

    def teardown_method(self, method):
        self.driver.quit()

    def test_add_to_cart(self):
        self.driver.get(
            "https://magento.softwaretestingboard.com/women/tops-women/hoodies-and-sweatshirts-women.html?color=57&material=38&size=168&style_general=136"
        )

        wait = WebDriverWait(self.driver, 10)

        # Locate product image and hover over it
        product_image = wait.until(EC.presence_of_element_located(
            (By.XPATH, "//main[@id='maincontent']//li/div/a/span/span/img")))

        actions = ActionChains(self.driver)
        actions.move_to_element(product_image).perform()

        # Wait for the 'Add to Cart' button to appear and click it
        add_to_cart_button = wait.until(EC.element_to_be_clickable(
            (By.XPATH, "//main[@id='maincontent']//li/div/div/div[4]//button")))

        add_to_cart_button.click()

        # Wait for the cart to update
        time.sleep(2)  # Can replace with a wait condition

        # Open the cart and proceed to checkout
        cart_icon = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".showcart")))
        cart_icon.click()

        checkout_button = wait.until(EC.element_to_be_clickable((By.ID, "top-cart-btn-checkout")))
        checkout_button.click()

        # Verify item is in the cart
        cart_items = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, ".minicart-items-wrapper")))
        assert cart_items is not None, "Cart is empty!"


# Run the test if executing directly
if __name__ == "__main__":
    test = TestAddToCart()
    test.setup_method(None)
    test.test_add_to_cart()
    test.teardown_method(None)